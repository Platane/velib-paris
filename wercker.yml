
box: node:6

build:

    steps:

        # instal dependencies with yarn,
        # using yarn cache http://blog.wercker.com/2016/10/13/Yarn.html

        - script:
            name: install yarn
            code: |
                npm install -g yarn

        - script:
            name: set yarn cache
            code: |
                export YARN_CACHE=$WERCKER_CACHE_DIR/yarn

        - script:
            name: install back dependencies
            cwd: back
            code: |
                HOME=$YARN_CACHE yarn

        - script:
            name: print back outdated package
            cwd: back
            code: npm outdated --quiet

        - script:
            name: build back
            cwd: back
            code: npm run build

        - script:
            name: test back
            cwd: back
            code: npm test


prepare-appengine-module:

    steps:

        - script:
            name: prepare lib directory
            cwd: back
            code: |
                node -e "var pkg=require('./package.json');pkg.devDependencies={};pkg.name='velib-paris-'+process.env.APP_ENGINE_MODULE;pkg.scripts.start='node ./module-'+process.env.APP_ENGINE_MODULE+'/index.js';console.log(JSON.stringify(pkg))" > ./lib/package.json
                cp ./src/module-$APP_ENGINE_MODULE/app.yaml ./lib/app.yaml
                node -e "console.log(require('./package.json').version.replace(/\./g,'-')+'-'+process.env.WERCKER_GIT_COMMIT)" > ./lib/version
                node -e "console.log(JSON.parse(process.env.GC_JSON_KEY_FILE).client_email)" > ./lib/account

        # - nomkhonwaan/appengine-deploy:
        #     name: prepare dist
        #     cwd: back/lib
        #     token: $APP_ENGINE_TOKEN

deploy-appengine-module:

    box:
        id: google/cloud-sdk

    steps:

        - script:
            name: Activate service account
            cwd: back/lib
            code: |
                echo $GC_JSON_KEY_FILE >> secret.json
                CLOUDSDK_PYTHON_SITEPACKAGES=1 gcloud auth activate-service-account $( cat account ) --key-file secret.json

        - script:
            name: Upload to store
            cwd: back/lib
            code: |
                gcloud app deploy --version $( cat version )
