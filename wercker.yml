
box: node:6.9

build:

    steps:

        - script:
            cwd: back
            name: install dependencies
            code: |
                npm install -g yarn
                export YARN_CACHE=$WERCKER_CACHE_DIR/yarn
                HOME=$YARN_CACHE yarn --pure-lockfile

        - script:
            cwd: back
            name: build back
            code: env NODE_ENV=ASYNC_POLYFILL yarn run build

        - script:
            cwd: back
            name: test back
            code: env NODE_ENV=ASYNC_POLYFILL yarn run test-skip-io

        - script:
            cwd: back
            name: install production node_modules
            code: |
                rm -r node_modules
                HOME=$YARN_CACHE yarn --pure-lockfile --production=true

        - script:
            cwd: back
            name: prepare bundle
            code: |
                mkdir -p dist
                mkdir dist/fetchStationAvailability
                cp -r lib/* dist/fetchStationAvailability/
                cp -r node_modules dist/fetchStationAvailability/node_modules
                cp package.json dist/fetchStationAvailability/package.json
                echo "exports.run = require('./module/fetchStationAvailability').run" >> dist/fetchStationAvailability/index.js

        - script:
            name: prepare env
            code: |
                node -e "console.log(JSON.parse(process.env.GC_JSON_KEY_FILE).client_email)" > ./account
                node -e "console.log(JSON.parse(process.env.GC_JSON_KEY_FILE).project_id)" > ./project


deploy-back:

    box:
        id: google/cloud-sdk

    steps:

        - script:
            name: Activate service account
            code: |
                echo $GC_JSON_KEY_FILE >> secret.json
                CLOUDSDK_PYTHON_SITEPACKAGES=1 gcloud auth activate-service-account $( cat account ) --key-file secret.json --project $( cat project )

        - script:
            name: create bucket
            code: gsutil mb -c STANDARD -l EUROPE-WEST1 -p $( cat project ) gs://platane-velib-fetchstationavailability || echo 1

        - script:
            name: deploy function
            code: gcloud beta functions deploy fetchStationAvailability --region EUROPE-WEST1 --local-path back/dist/fetchStationAvailability --memory=128MB --timeout 120s --entry-point run --stage-bucket platane-velib-fetchstationavailability --trigger-http

        - script:
            name: verify function
            code: gcloud beta functions describe fetchStationAvailability